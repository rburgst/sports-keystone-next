// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider   = "prisma-client-js"
  output     = "node_modules/.prisma/client"
  engineType = "binary"
}

model User {
  id       String  @id @default(cuid())
  name     String  @default("")
  email    String  @unique @default("")
  password String
  role     Role?   @relation("User_role", fields: [roleId], references: [id])
  roleId   String? @map("role")
  club     Club?   @relation("Club_managerUser")

  @@index([roleId])
}

model Role {
  id                      String  @id @default(cuid())
  name                    String  @default("")
  canManageClubs          Boolean @default(false)
  canManageUsers          Boolean @default(false)
  canReadAllAthletes      Boolean @default(false)
  canWriteAllAthletes     Boolean @default(false)
  canReadOwnClubAthletes  Boolean @default(false)
  canWriteOwnClubAthletes Boolean @default(false)
  canEnterScores          Boolean @default(false)
  canEnterScoresWhenDone  Boolean @default(false)
  canManageContent        Boolean @default(false)
  users                   User[]  @relation("User_role")
}

model Club {
  id            String    @id @default(cuid())
  clubName      String    @default("")
  clubNumber    Int?      @unique
  contactEmail  String    @default("")
  addressName   String    @default("")
  street        String    @default("")
  zip           String    @default("")
  city          String    @default("")
  country       String?   @default("AT")
  external      Boolean   @default(false)
  managerUser   User?     @relation("Club_managerUser", fields: [managerUserId], references: [id])
  managerUserId String?   @unique @map("managerUser")
  athletes      Athlete[] @relation("Athlete_club")
  teams         Team[]    @relation("Team_club")
}

model Athlete {
  id               String    @id @default(cuid())
  firstName        String    @default("")
  lastName         String    @default("")
  birthYear        Int
  gender           String?
  disabled         Boolean   @default(false)
  club             Club?     @relation("Athlete_club", fields: [clubId], references: [id])
  clubId           String?   @map("club")
  team             Team?     @relation("Athlete_team", fields: [teamId], references: [id])
  teamId           String?   @map("team")
  version          Int       @default(0)
  createdBy        String    @default("")
  lastModifiedBy   String    @default("")
  createdDate      DateTime? @default(now())
  lastModifiedDate DateTime? @default(now()) @updatedAt

  @@index([clubId])
  @@index([teamId])
}

model Team {
  id       String    @id @default(cuid())
  teamName String    @default("")
  teamType String
  club     Club?     @relation("Team_club", fields: [clubId], references: [id])
  clubId   String?   @map("club")
  athletes Athlete[] @relation("Athlete_team")

  @@index([clubId])
}